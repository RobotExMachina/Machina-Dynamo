<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DynamoServices</name>
    </assembly>
    <members>
        <member name="T:Autodesk.DesignScript.Runtime.SupressImportIntoVMAttribute">
            <summary>
            This attribute is used to specify whether the item will be imported
            into the VM.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Runtime.IsVisibleInDynamoLibraryAttribute">
            <summary>
            This attribute is used to specify whether the item will be displayed
            in the library.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Runtime.ArbitraryDimensionArrayImportAttribute">
            <summary>
            This attribute is used to marshal parameters or return value of a method 
            as arbitrary dimension array in DesignScript VM. Usually this attribute
            is expected to be applied on IEnumerable derived object types. This 
            attribute should be used if you expect the IEnumerable parameters or
            return value may hold nested collection.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Runtime.ExtensionApplicationAttribute">
            <summary>
            This attribute is used to specify the Type of class that implements
            IExtensionApplication interface in the specified assembly. This 
            attribute can be used only once at assembly level. Having this attribute
            saves the cost of reflection on each exported types to find the type
            that implements IExtensionApplication interface.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Runtime.GraphicDataProviderAttribute">
            <summary>
            This attribute is used to specify the Type of class that implements
            IGraphicDataProvider interface in the specified assembly. This 
            attribute can be used only once at assembly level. Having this attribute
            saves the cost of reflection on each exported types to find the type
            that implements IGraphicDataProvider interface.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Runtime.ContextDataProviderAttribute">
            <summary>
            This attribute is used to specify the Type of class that implements
            IContextDataProvider interface in the specified assembly. This 
            attribute can be used only once at assembly level. Having this attribute
            saves the cost of reflection on each exported types to find the type
            that implements IContextDataProvider interface.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Runtime.ContextDataProviderAttribute.#ctor(System.Type,System.Func{System.Boolean})">
            <summary>
            Constructor to construct this attribute with a delegate to check
            whether this data provider captures data.
            </summary>
            <param name="dataProviderType">Type that implements 
            IContextDataProvider interface</param>
            <param name="capturesData">Delegate to check if the provider can
            capture data</param>
        </member>
        <member name="M:Autodesk.DesignScript.Runtime.ContextDataProviderAttribute.#ctor(System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="dataProviderType">Type that implements 
            IContextDataProvider interface</param>
        </member>
        <member name="P:Autodesk.DesignScript.Runtime.ContextDataProviderAttribute.Type">
            <summary>
            Type implementing IContextDataProvider interface.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Runtime.ContextDataProviderAttribute.CapturesData">
            <summary>
            Checks if this type can capture data interactively
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Runtime.AllowRankReductionAttribute">
            <summary>
            This attribute can be applied to methods that return collection of
            objects, but with some combination of input parameters it returns a 
            collection of single object and at designscript side we want the method
            to return a single object instead of a collection of single object.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Runtime.AllowRankReductionAttribute.ReduceRank(System.Object)">
            <summary>
            Utility method to get the single object from the collection of 
            single object. If the input object is neither a collection nor a
            collection of single object, this method returns the input object.
            </summary>
            <param name="collection">Input object to be converted to singleton.
            </param>
            <returns>An object from the collection of single object or the 
            input object.</returns>
            
        </member>
        <member name="M:Autodesk.DesignScript.Runtime.AllowRankReductionAttribute.IsRankReducible(System.Object)">
            <summary>
            Checks if the input object is a collection of single object.
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.DesignScript.Runtime.MultiReturnAttribute">
            <summary>
            This attribute describes keys in the returned dictionary of a method.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Runtime.RuntimeRequirementAttribute">
            <summary>
            This attribute can be applied to method which requires some runtime 
            support from DesignScript, e.g., tracing. 
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Runtime.DefaultArgumentAttribute">
            <summary>
            This attribute can be applied to parameter to specify a default 
            argument expressions.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Runtime.PreferredShortNameAttribute">
            <summary>
            This attribute can be applied to class to give a hint for generating
            variable name in node to code. For example, generating variable "vec"
            for Vector.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Runtime.IsObsoleteAttribute">
            <summary> 
            This attribute indicates the node is obsolete
            </summary> 
        </member>
        <member name="T:Autodesk.DesignScript.Runtime.KeepReferenceAttribute">
            <summary>
            This attribute indicates the parameter will be referenced by the return
            object, hence its DS wrap object shouldn't be disposed even it is out
            of scope. The life-cycle of parameter will have the same life-cycle as
            the return object.
            
            Note the type of return object should be reference type, either a
            pointer or an array.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Runtime.KeepReferenceThisAttribute">
             <summary>
             This attribute is applied to member function of zero touch libary.
             It indicates the return object should keep a reference to "this"
             object so that even "this" object is out of scope, it will not be
             disposed.
            
             Note the type of return object should be reference type, either a
             pointer or an array.
             </summary>
        </member>
        <member name="T:Dynamo.Events.ExecutionEvents">
            <summary>
            Communication bridge between Dynamo and client libraries to notify
            about changes to execution state
            </summary>
        </member>
        <member name="M:Dynamo.Events.ExecutionEvents.OnGraphPreExecution(Dynamo.Session.IExecutionSession)">
            <summary>
            Notify observers that the graph is about to evaluate
            </summary>
        </member>
        <member name="M:Dynamo.Events.ExecutionEvents.OnGraphPostExecution(Dynamo.Session.IExecutionSession)">
            <summary>
            Notify observers that the graph has evaluated
            </summary>
        </member>
        <member name="E:Dynamo.Events.ExecutionEvents.GraphPreExecution">
            <summary>
            The graph is about to evaluate
            </summary>
        </member>
        <member name="E:Dynamo.Events.ExecutionEvents.GraphPostExecution">
            <summary>
            The graph is done evaluating
            </summary>
        </member>
        <member name="P:Dynamo.Events.ExecutionEvents.ActiveSession">
            <summary>
            Returns active session for the execution, when Graph is executing. 
            This property is set to null if graph is not executing.
            </summary>
        </member>
        <member name="T:Dynamo.Session.IExecutionSession">
            <summary>
            Represents a session object for current execution.
            </summary>
        </member>
        <member name="M:Dynamo.Session.IExecutionSession.GetParameterValue(System.String)">
            <summary>
            Returns session parameter value for the given parameter name.
            </summary>
            <param name="parameter">Name of session parameter</param>
            <returns>Session parameter value as object</returns>
        </member>
        <member name="M:Dynamo.Session.IExecutionSession.GetParameterKeys">
            <summary>
            Returns list of session parameter keys available in the session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Session.IExecutionSession.ResolveFilePath(System.String@)">
            <summary>
            A helper method to resolve the given file path. The given file path
            will be resolved by searching into the current workspace, core and 
            host application installation folders etc.
            </summary>
            <param name="filepath">Input file path</param>
            <returns>True if the file is found</returns>
        </member>
        <member name="P:Dynamo.Session.IExecutionSession.CurrentWorkspacePath">
            <summary>
            File path for the current workspace in execution. Could be null or
            empty string if workspace is not yet saved.
            </summary>
        </member>
        <member name="T:Dynamo.Session.ParameterKeys">
            <summary>
            List of possible session parameter keys to obtain the session parameters.
            </summary>
        </member>
        <member name="F:Dynamo.Session.ParameterKeys.GeometryFactory">
            <summary>
            This key is used to get the full path for library, which implements 
            IGeometryFactory interface.
            </summary>
        </member>
        <member name="F:Dynamo.Session.ParameterKeys.NumberFormat">
            <summary>
            This key is used to get the number format used by Dynamo to format 
            the preview values. The returned value is string.
            </summary>
        </member>
        <member name="F:Dynamo.Session.ParameterKeys.MajorVersion">
            <summary>
            This key is used to get the Major version of Dynamo. The returned value
            is a number.
            </summary>
        </member>
        <member name="F:Dynamo.Session.ParameterKeys.MinorVersion">
            <summary>
            This key is used to get the Major version of Dynamo. The returned value
            is a number.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Interfaces.IRenderPackage">
            <summary>
            This interface caches render specific data.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.AddPointVertex(System.Double,System.Double,System.Double)">
            <summary>
            Add a point vertex to the render package.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.AddPointVertexColor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Add a point color to the render package.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.AddTriangleVertex(System.Double,System.Double,System.Double)">
            <summary>
            Add a triangle vertex location to the render package.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.AddTriangleVertexNormal(System.Double,System.Double,System.Double)">
            <summary>
            Add a triangle vertex normal to the render package.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.AddTriangleVertexUV(System.Double,System.Double)">
            <summary>
            Add a triangle texture coordinate to the render package.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.AddTriangleVertexColor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Add a triangle vertex color to the render package.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.AddLineStripVertex(System.Double,System.Double,System.Double)">
            <summary>
            Add a line vertex to the render package.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.AddLineStripVertexCount(System.Int32)">
            <summary>
            Add a line strip vertex count to the render package.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.AddLineStripVertexColor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Add a line strip vertex color to the render package.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.ApplyPointVertexColors(System.Byte[])">
            <summary>
            Apply a color to each point vertex.
            </summary>
            <param name="colors">A buffer of R,G,B,A values corresponding to each vertex.</param>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.ApplyLineVertexColors(System.Byte[])">
            <summary>
            Apply a color to a sequence of line vertices.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.ApplyMeshVertexColors(System.Byte[])">
            <summary>
            Apply a color to each mesh vertex.
            </summary>
            <param name="colors">A buffer of R,G,B,A values corresponding to each vertex.</param>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.SetColors(System.Byte[])">
            <summary>
            Set a an array of bytes to be used as a color map.
            </summary>
            <param name="colors"></param>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IRenderPackage.Clear">
            <summary>
            Clear all render data from the render package.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.Description">
            <summary>
            A tag used to store information about the render package.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.IsSelected">
            <summary>
            A flag indicating whether the render package is selected.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.HasRenderingData">
            <summary>
            A flag indicating whether the render package has data.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.DisplayLabels">
            <summary>
            A flag indicating whether the render package is displaying labels
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.RequiresPerVertexColoration">
            <summary>
            A flag indicating whether the render package requires 
            per vertex coloration.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.PointVertexCount">
            <summary>
            The number of point vertices in the package.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.LineVertexCount">
            <summary>
            The number of line vertices in the package.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.MeshVertexCount">
            <summary>
            The number of mesh vertices in the package.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.LineStripVertexCounts">
            <summary>
            A collection of int values representing how many vertices
            comprise each line segment in the package.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.LineStripVertices">
            <summary>
            A collection containing all line strip vertices as x1,y1,z1,x2,y2,z2...
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.LineStripVertexColors">
            <summary>
            A collection containing all line strip colors as r1,g1,b1,a1,r2,g2,b2,a2...
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.LineStripIndices">
            <summary>
            A collection containing all line strip indices.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.MeshVertices">
            <summary>
            A collection containing all mesh vertices as x1,y1,z1,x2,y2,z2...
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.MeshVertexColors">
            <summary>
            A collection containing all mesh vertex colors as r1,g1,b1,a1,r2,g2,b2,a2...
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.MeshIndices">
            <summary>
            A collection containing all mesh vertex indices.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.MeshNormals">
            <summary>
            A collection containing all mesh normals as x1,y1,z1,x2,y2,z2...
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.MeshTextureCoordinates">
            <summary>
            A collection containing all mesh texture coordinates as u1,v1,u2,v2...
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.PointVertices">
            <summary>
            A collection containing all point vertices as x1,y1,z1,x2,y2,z2...
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.PointVertexColors">
            <summary>
            A collection containing all mesh vertex colors as r1,g1,b1,a1,r2,g2,b2,a2...
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.PointIndices">
            <summary>
            A collection containing all mesh vertex indices.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.Colors">
            <summary>
            A collection of bytes representing RGBA colors. This field can be used to populate textures
            for mapping onto surfaces. Use the ColorsStride property to define the
            size of one dimension of the collection.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IRenderPackage.ColorsStride">
            <summary>
            The size of one dimension of the Colors collection.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Interfaces.IGraphicItem">
            <summary>
            Represents a graphics item object, that can provide tesselated data
            into the given render package.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IGraphicItem.Tessellate(Autodesk.DesignScript.Interfaces.IRenderPackage,Autodesk.DesignScript.Interfaces.TessellationParameters)">
            <summary>
            Returns the graphics/tesselation data in given render package object.
            </summary>
            <param name="package">The render package, where graphics data to be
            pushed.</param>
            <param name="parameters"></param>
        </member>
        <member name="T:Autodesk.DesignScript.Interfaces.ITransformable">
            <summary>
            An interface that defines items which have a transform property, which is a 4x4 matrix.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.ITransformable.SetTransform(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Set the transform using a series of doubles. The resulting transform is applied to all geometry in the renderPackage.
            Following conventional matrix notation, m11 is the value of the first row and first column, and m12
            is the value of the first row and second column.
            NOTE: This method should set the matrix exactly as described by the caller.
            </summary>
            <param name="m11"></param>
            <param name="m12"></param>
            <param name="m13"></param>
            <param name="m14"></param>
            <param name="m21"></param>
            <param name="m22"></param>
            <param name="m23"></param>
            <param name="m24"></param>
            <param name="m31"></param>
            <param name="m32"></param>
            <param name="m33"></param>
            <param name="m34"></param>
            <param name="m41"></param>
            <param name="m42"></param>
            <param name="m43"></param>
            <param name="m44"></param>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.ITransformable.SetTransform(System.Double[])">
             <summary>
             Set the transform as a double array, this transform is applied to all geometry in the renderPackage.
             This matrix should be laid out as follows in row vector order:
             [Xx,Xy,Xz, 0,
              Yx, Yy, Yz, 0,
              Zx, Zy, Zz, 0,
              offsetX, offsetY, offsetZ, W]
            NOTE: This method should transform the matrix from row vector order to whatever form is needed by the implementation.
             </summary>
             <param name="matrix"></param>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.ITransformable.RequiresCustomTransform">
            <summary>
            A flag indicating whether the render package has had its Transform property set
            explicitly.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.ITransformable.Transform">
            <summary>
            A 4x4 matrix that is used to transform all geometry in the render packaage.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.TessellationParameters.Tolerance">
            <summary>
            The tolerance for faceting.
            Default is -1.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.TessellationParameters.MaxTessellationDivisions">
            <summary>
            The maximum number of divisions for tessellation.
            Default is 512
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.TessellationParameters.ShowEdges">
            <summary>
            A flag indicating whether surface edges should be
            included in the RenderPackage. Default is false.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Interfaces.IGraphicDataProvider">
            <summary>
            This interface provides graphics data into the RenderPackage interface 
            for given set of objects.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IGraphicDataProvider.GetGraphicItems(System.Object)">
            <summary>
            Returns a list of IGraphicItem owned by the given object.
            </summary>
            <param name="obj">The object for which graphics items are queried.
            </param>
            <returns>List of IGraphicItem owned by the input object.</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IGraphicDataProvider.Tessellate(System.Collections.Generic.List{System.Object},Autodesk.DesignScript.Interfaces.IRenderPackage,Autodesk.DesignScript.Interfaces.TessellationParameters)">
            <summary>
            Returns the Graphics/Render data into the given render package.
            </summary>
            <param name="objects">Objects which owns some graphics items</param>
            <param name="package">RenderPackage where graphics/render data can
            be pushed/set.</param>
            <param name="parameters">A TessellationParameters object.</param>
        </member>
        <member name="T:Autodesk.DesignScript.Interfaces.IConfiguration">
            <summary>
            Provides application configuration
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IConfiguration.GetConfigValue(System.String)">
            <summary>
            Returns application defined configuration value.
            </summary>
            <param name="config">Configuration name</param>
            <returns>Configuration value</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IConfiguration.SetConfigValue(System.String,System.Object)">
            <summary>
            Set application defined configuration value.
            </summary>
            <param name="config">Configuration name</param>
            <param name="value">Configuration value</param>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IConfiguration.RootModulePath">
            <summary>
            Provides the path of main executing script
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IConfiguration.IncludeDirectories">
            <summary>
            Provides list of include directories.
            </summary>
        </member>
        <member name="F:Autodesk.DesignScript.Interfaces.ConfigurationKeys.GeometryFactory">
            <summary>
            This key is used to configure the library filename, which implements 
            IGeometryFactory interface.
            </summary>
        </member>
        <member name="F:Autodesk.DesignScript.Interfaces.ConfigurationKeys.PersistentManager">
            <summary>
            This key is used to configure the library filename, which implements 
            IPersistenceManager interface.
            </summary>
        </member>
        <member name="F:Autodesk.DesignScript.Interfaces.ConfigurationKeys.GeometryProvider">
            <summary>
            This key is used to set/get IContextDataProvider implementation
            by host application.
            </summary>
        </member>
        <member name="F:Autodesk.DesignScript.Interfaces.ConfigurationKeys.SessionDatabase">
            <summary>
            This key is used to set the session database object for the host
            application. THIS IS NOW DEPRECATED (use "SessionKey" instead).
            </summary>
        </member>
        <member name="F:Autodesk.DesignScript.Interfaces.ConfigurationKeys.SessionKey">
            <summary>
            This key is used to set the session key (by the host application) 
            which is understood by the corresponding IPersistenceManager when 
            it comes to telling one session from another. An example of 
            session would be the documents in the host application, a host 
            document can be identified with a session key, and each host 
            document has a unique session key that IPersistenceManager can use
            to differentiate between two documents. The corresponding value 
            for SessionKey is a value of "string" type.
            </summary>
        </member>
        <member name="F:Autodesk.DesignScript.Interfaces.ConfigurationKeys.RequestExplicitLock">
            <summary>
            This key is used to request explicit lock on database by the host
            application before execution of the script. The corresponding value
            is bool.
            </summary>
        </member>
        <member name="F:Autodesk.DesignScript.Interfaces.ConfigurationKeys.RecordingUserActions">
            <summary>
            This key is used to check if the application is recording user actions.
            The corresponding value is bool.
            </summary>
        </member>
        <member name="F:Autodesk.DesignScript.Interfaces.ConfigurationKeys.ClearPersistedObjects">
            <summary>
            This key is used to determine if the persistent objects should be cleared on 
            screen before each run. In live execution scenarios like DesignScript Studio,
            there is no clear distinction between runs. For more information, please see 
            "AsmExtensionApplication::OnBeginExecution" in "AsmExtensionApplication.cpp".
            </summary>
        </member>
        <member name="F:Autodesk.DesignScript.Interfaces.ConfigurationKeys.GeometricPreviewEnabled">
            <summary>
            This key is being referenced in "DesignScriptStudio.Graph.Ui.GraphControl"
            as a way to determine if the underlying "RenderService" should be enabled.
            The default behaviour (if this flag is not specified) is to enable geometric 
            preview. The "object" value being passed for this configuration key is 
            expected to be a "bool" object rather than a "string" object.
            </summary>
        </member>
        <member name="F:Autodesk.DesignScript.Interfaces.ConfigurationKeys.FilteredClasses">
            <summary>
            This key is being referenced in "DesignScriptStudio.Graph.Ui.GraphControl"
            as a way to filtered out classes that is currently not supported in ProtoGL.
            The "object" value being passed for this configuration key is 
            expected to be a "string" object which specified the assembly and class that
            should be hidden. The location of the config file is "\installtools\Bundle\
            DesignScript.bundle\Contents\Win64" The format of the string should be 
            "%assemblyName%;%className&amp;;..;%assemblyName%;%className&amp;;", 
            The CoreCoponent will look for "%assemblyName%;%className&amp;;" (with two ';' at
            end of assembly name and class name) and filter the fully matched item out
            </summary>
        </member>
        <member name="F:Autodesk.DesignScript.Interfaces.ConfigurationKeys.GeometryXmlProperties">
            <summary>
            This key is referenced in the geometry test framework.
            The value type for this key is bool.
            If the value is true, that means the core will generate XML properties.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Interfaces.IExecutionSession">
            <summary>
            Represents a session object for current execution.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IExecutionSession.SearchFile(System.String)">
            <summary>
            Searches the given file and returns full path, if found.
            </summary>
            <param name="filename">File name to search.</param>
            <returns>Full path of given filename or empty string if file not 
            found.</returns>
        </member>
        <member name="P:Autodesk.DesignScript.Interfaces.IExecutionSession.Configuration">
            <summary>
            Returns the configuration object for this execution session.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Interfaces.IExtensionApplication">
            <summary>
            An FFI library can implement this interface to get some notifications
            from DesignScript application.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IExtensionApplication.StartUp">
            <summary>
            Called when first time this application is loaded.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IExtensionApplication.OnBeginExecution(Autodesk.DesignScript.Interfaces.IExecutionSession)">
            <summary>
            Called when script execution starts.
            </summary>
            <param name="session">Execution session object with which script
            execution starts.</param>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IExtensionApplication.OnSuspendExecution(Autodesk.DesignScript.Interfaces.IExecutionSession)">
            <summary>
            Called when script execution is suspended for debugging/inspection
            </summary>
            <param name="session">Execution session object with which script
            execution starts.</param>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IExtensionApplication.OnResumeExecution(Autodesk.DesignScript.Interfaces.IExecutionSession)">
            <summary>
            Called when script execution is resumed after debugging/inspection
            </summary>
            <param name="session">Execution session object with which script
            execution starts.</param>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IExtensionApplication.OnEndExecution(Autodesk.DesignScript.Interfaces.IExecutionSession)">
            <summary>
            Called when script execution has ended.
            </summary>
            <param name="session">Execution session object with which script
            execution had started.</param>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IExtensionApplication.ShutDown">
            <summary>
            Called when designscript application is shutting down.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Interfaces.IExtensionApplication.PreloadAsmLibraries(System.String)">
            <summary>
            Preloads unmanaged ASM libraries 
            </summary>
            <param name="baseDirectory"></param>
        </member>
        <member name="T:DynamoServices.RegisterForTraceAttribute">
            <summary>
            This attribute can be applied to methods that register callsite with
            trace mechanism.
            </summary>
        </member>
        <member name="T:DynamoServices.TraceUtils">
            <summary>
            Utility class to Get/Set TraceData
            </summary>
        </member>
        <member name="M:DynamoServices.TraceUtils.GetTraceData(System.String)">
            <summary>
            Returns the data that is bound to a particular key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:DynamoServices.TraceUtils.SetTraceData(System.String,System.Runtime.Serialization.ISerializable)">
            <summary>
            Set the data bound to a particular key
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="E:Dynamo.Events.WorkspaceEvents.WorkspaceAdded">
            <summary>
            An event that is triggered when a workspace is added
            to the DynamoModel's Workspaces collection.
            </summary>
        </member>
        <member name="E:Dynamo.Events.WorkspaceEvents.WorkspaceRemoveStarted">
            <summary>
            An event that is triggered prior to the removal of the workspace
            from the Workspaces collection.
            </summary>
        </member>
        <member name="E:Dynamo.Events.WorkspaceEvents.WorkspaceRemoved">
            <summary>
            An event that is triggered when a workspace is removed
            from the DynamoModel's Workspaces collection.
            </summary>
        </member>
        <member name="E:Dynamo.Events.WorkspaceEvents.WorkspaceClearing">
            <summary>
            An event that is triggered before a workspace is cleared.
            </summary>
        </member>
        <member name="E:Dynamo.Events.WorkspaceEvents.WorkspaceCleared">
            <summary>
            An event that is triggered after a workspace is cleared.
            </summary>
        </member>
    </members>
</doc>

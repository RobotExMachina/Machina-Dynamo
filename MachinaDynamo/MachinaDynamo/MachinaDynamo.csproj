<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{532069C2-67B0-4C30-A6A0-07273FD9A48A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>MachinaDynamo</RootNamespace>
    <AssemblyName>MachinaDynamo</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Debug\MachinaDynamo.xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Release\MachinaDynamo.xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="DynamoServices">
      <HintPath>ref\DynamoServices.dll</HintPath>
    </Reference>
    <Reference Include="Machina, Version=1.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\package\Machina\bin\Machina.dll</HintPath>
    </Reference>
    <Reference Include="ProtoGeometry">
      <HintPath>ref\ProtoGeometry.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="MachinaDynamo.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Resources\MachinaDynamo.Robots.Create.Large.png" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Resources\MachinaDynamo.Robots.Create.Small.png" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Resources\MachinaDynamoImages.resx" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Resources\MachinaDynamo.Actions.Motion.Large.png" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Resources\MachinaDynamo.Actions.Motion.Small.png" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>IF ($(ConfigurationName)) == (Debug) GOTO END
cd $(ProjectDir)
copy /y $(OutDir)MachinaDynamo.dll "D:\Dropbox\Jose Luis\code\MachinaDynamo\package\Machina\bin"
copy /y $(OutDir)MachinaDynamo.xml "D:\Dropbox\Jose Luis\code\MachinaDynamo\package\Machina\bin"
copy /y $(OutDir)MachinaDynamo.customization.dll "D:\Dropbox\Jose Luis\code\MachinaDynamo\package\Machina\bin"
:END</PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <!-- This runs conditionally after a build completes.  When it runs is very configurable but in general it will only run if a build successfully completes and produces new output. -->
  <!--Target Name="PostBuildEvent">

  </Target-->
  <!-- This basically ends up as a taget looking like this: https://stackoverflow.com/a/6128761/1934487
  <Target Name="PostBuildEvent">
    <Exec Command="$(PostBuildEvent)" />
  </Target>
  -->
  <!-- This runs as the last action in the Build target and does so irrespective of whether or not a build succeeds.  It runs after PostBuildEvent (if it runs at all) -->
  <Target Name="AfterBuild">
    <!-- Get System.Drawing.dll -->
    <GetReferenceAssemblyPaths TargetFrameworkMoniker=".NETFramework, Version=v2.0">
      <Output TaskParameter="FullFrameworkReferenceAssemblyPaths" PropertyName="FrameworkAssembliesPath" />
    </GetReferenceAssemblyPaths>
    <!-- Get assembly -->
    <GetAssemblyIdentity AssemblyFiles="$(OutDir)$(TargetName).dll">
      <Output TaskParameter="Assemblies" ItemName="AssemblyInfo" />
    </GetAssemblyIdentity>
    <!-- Generate customization dll -->
    <GenerateResource UseSourcePath="true" Sources="$(ProjectDir)\Resources\MachinaDynamoImages.resx" OutputResources="$(ProjectDir)\Resources\MachinaDynamoImages.resources" References="$(FrameworkAssembliesPath)System.Drawing.dll" />
    <AL TargetType="library" EmbedResources="$(ProjectDir)\Resources\MachinaDynamoImages.resources" OutputAssembly="$(OutDir)$(TargetName).customization.dll" />
    <Exec Command="echo Generated resources file $(OutDir)$(TargetName).customization.dll" />
    <Exec Command="echo $(ProjectDir)" />
    <Exec Command="echo $(OutDir)" />
    <Exec Command="echo $(TargetName)" />
    <Exec Command="echo $(FrameworkAssembliesPath)" />
    <Exec Command="echo %(AssemblyInfo.Version)" />
    <!-- https://stackoverflow.com/a/6128761/1934487 -->
  </Target>
</Project>